{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\kribble\\\\src\\\\Can.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"red\", \"green\", \"yellow\", \"black\", \"blue\"];\n\nfunction Can() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [lastPosition, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (canvasRef.current) {\n      ctx.current = canvasRef.current.getContext('2d');\n    }\n  }, []);\n  const draw = useCallback((x, y) => {\n    if (mouseDown) {\n      ctx.current.beginPath();\n      ctx.current.strokeStyle = selectedColor;\n      ctx.current.lineWidth = 10;\n      ctx.current.lineJoin = 'round';\n      ctx.current.moveTo(lastPosition.x, lastPosition.y);\n      ctx.current.lineTo(x, y);\n      ctx.current.closePath();\n      ctx.current.stroke();\n      setPosition({\n        x,\n        y\n      });\n    }\n  }, [lastPosition, mouseDown, selectedColor, setPosition]);\n\n  const download = async () => {\n    const image = canvasRef.current.toDataURL('image/png');\n    const blob = await (await fetch(image)).blob();\n    const blobURL = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = blobURL;\n    link.download = \"image.png\";\n    link.click();\n  };\n\n  const clear = () => {\n    ctx.current.clearRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height);\n  };\n\n  const onMouseDown = e => {\n    setPosition({\n      x: e.pageX,\n      y: e.pageY\n    });\n    setMouseDown(true);\n  };\n\n  const onMouseUp = e => {\n    setMouseDown(false);\n  };\n\n  const onMouseMove = e => {\n    draw(e.pageX, e.pageY);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Addo\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        border: \"1px solid #000\"\n      },\n      width: 1500,\n      height: 650,\n      ref: canvasRef,\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      onMouseLeave: onMouseUp,\n      onMouseMove: onMouseMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedColor,\n        onChange: e => setSelectedColor(e.target.value),\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: color,\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: '2rem',\n          fontFamily: 'cursive'\n        },\n        onClick: clear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: '2rem',\n          fontFamily: 'cursive'\n        },\n        onClick: download,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Can, \"3Gfbksu6y3r4k6xAChQxUTjjNIY=\");\n\n_c = Can;\nexport default Can;\n\nvar _c;\n\n$RefreshReg$(_c, \"Can\");","map":{"version":3,"sources":["C:/Projects/kribble/src/Can.js"],"names":["React","useCallback","useEffect","useRef","useState","colors","Can","canvasRef","ctx","selectedColor","setSelectedColor","mouseDown","setMouseDown","lastPosition","setPosition","x","y","current","getContext","draw","beginPath","strokeStyle","lineWidth","lineJoin","moveTo","lineTo","closePath","stroke","download","image","toDataURL","blob","fetch","blobURL","URL","createObjectURL","link","document","createElement","href","click","clear","clearRect","canvas","width","height","onMouseDown","e","pageX","pageY","onMouseUp","onMouseMove","border","target","value","map","color","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst colors = [\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"black\",\n  \"blue\"\n]\n\nfunction Can() {\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [lastPosition, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      ctx.current = canvasRef.current.getContext('2d');\n    }\n  }, []);\n\n  const draw = useCallback((x, y) => {\n    if (mouseDown) {\n      ctx.current.beginPath();\n      ctx.current.strokeStyle = selectedColor;\n      ctx.current.lineWidth = 10;\n      ctx.current.lineJoin = 'round';\n      ctx.current.moveTo(lastPosition.x, lastPosition.y);\n      ctx.current.lineTo(x, y);\n      ctx.current.closePath();\n      ctx.current.stroke();\n\n      setPosition({\n        x,\n        y\n      })\n    }\n  }, [lastPosition, mouseDown, selectedColor, setPosition])\n\n  const download = async () => {\n    const image = canvasRef.current.toDataURL('image/png');\n    const blob = await (await fetch(image)).blob();\n    const blobURL = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = blobURL;\n    link.download = \"image.png\";\n    link.click();\n  }\n\n  const clear = () => {\n    ctx.current.clearRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height)\n  }\n\n  const onMouseDown = (e) => {\n    setPosition({\n      x: e.pageX,\n      y: e.pageY\n    })\n    setMouseDown(true)\n  }\n\n  const onMouseUp = (e) => {\n    setMouseDown(false)\n  }\n\n  const onMouseMove = (e) => {\n    draw(e.pageX, e.pageY)\n  }\n\n  return (\n    <div className=\"Addo\">\n      <canvas\n        style={{\n          border: \"1px solid #000\"\n        }}\n        width={1500}\n        height={650}\n        ref={canvasRef}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseLeave={onMouseUp}\n        onMouseMove={onMouseMove}\n      />\n      <br />\n      <center>\n      <select\n        value={selectedColor}\n        onChange={(e) => setSelectedColor(e.target.value)}\n        >\n        {\n          colors.map(\n            color => <option key={color} value={color}>{color}</option>\n            )\n          }\n      </select>\n      <button style={{fontSize: '2rem', fontFamily: 'cursive'}} onClick={clear}>Clear</button>\n      <button style={{fontSize: '2rem', fontFamily: 'cursive'}}onClick={download}>Download</button>\n      </center>\n    </div>\n  );\n}\n\nexport default Can;"]},"metadata":{},"sourceType":"module"}