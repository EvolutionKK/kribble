{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\kribble\\\\src\\\\Components\\\\Play.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport getStroke from \"perfect-freehand\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\"; // const rough = require(\"rough\")\n\nimport rough from 'rou';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Play() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeev1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"heading1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"K\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'orange'\n            },\n            children: \"r\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'yellow'\n            },\n            children: \"i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 127\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '\t#00FF00'\n            },\n            children: \"b\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 169\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#00bfff'\n            },\n            children: \"b\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 213\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            children: \"l\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 256\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#FF1493'\n            },\n            children: \"e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 296\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'purple'\n            },\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 339\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'white',\n              fontSize: '4rem'\n            },\n            children: \"io\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 381\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://clipart.world/wp-content/uploads/2020/08/cartoon-pencil-png-transparent.png\",\n          style: {\n            marginLeft: '0px',\n            marginTop: '0px',\n            marginBottom: '0px',\n            marginRight: '70rem',\n            height: '7rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          class: \"navbar bg-light\",\n          style: {\n            display: 'block',\n            width: '90rem',\n            height: '4rem',\n            marginTop: '1rem',\n            alignContent: 'normal'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"navbar-text\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                textAlign: 'left',\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '7px'\n                },\n                children: \"ROUND\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 76\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '30px'\n                },\n                children: [\" TIME \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"image2baby\",\n                  src: \"https://upload.wikimedia.org/wikipedia/commons/7/7a/Alarm_Clock_GIF_Animation_High_Res.gif\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 16,\n                  columnNumber: 164\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 121\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '50rem',\n                  marginTop: '7px'\n                },\n                children: \"Number of Letters:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 297\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        class: \"navbar bg-light\",\n        style: {\n          display: 'inline-block',\n          width: '16rem',\n          height: '25rem',\n          marginTop: '0.6rem',\n          marginLeft: '2.5rem',\n          marginBottom: '20rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"navbar-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        class: \"navbar bg-light\",\n        style: {\n          display: 'inline-block',\n          width: '55rem',\n          height: '45rem',\n          marginTop: '0.6rem',\n          marginLeft: '0.6rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"navbar-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"mg\",\n        src: \"https://www.newsshuttle.com/wp-content/uploads/2020/06/HS2.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        calssName: \"overlay\",\n        class: \"navbar bg-light\",\n        style: {\n          display: 'inline-block',\n          width: '17.8rem',\n          height: '30rem',\n          marginTop: '0.6rem',\n          marginLeft: '0.6rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"navbar-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inpbaby\",\n      type: \"text\",\n      placeholder: \"Guess here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Play;\nconst generator = rough.generator();\n\nconst createElement = (id, x1, y1, x2, y2, type) => {\n  switch (type) {\n    case \"line\":\n    case \"rectangle\":\n      const roughElement = type === \"line\" ? generator.line(x1, y1, x2, y2) : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\n      return {\n        id,\n        x1,\n        y1,\n        x2,\n        y2,\n        type,\n        roughElement\n      };\n\n    case \"pencil\":\n      return {\n        id,\n        type,\n        points: [{\n          x: x1,\n          y: y1\n        }]\n      };\n\n    case \"text\":\n      return {\n        id,\n        type,\n        x1,\n        y1,\n        x2,\n        y2,\n        text: \"\"\n      };\n\n    default:\n      throw new Error(`Type not recognised: ${type}`);\n  }\n};\n\nconst nearPoint = (x, y, x1, y1, name) => {\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\n};\n\nconst onLine = function (x1, y1, x2, y2, x, y) {\n  let maxDistance = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n  const a = {\n    x: x1,\n    y: y1\n  };\n  const b = {\n    x: x2,\n    y: y2\n  };\n  const c = {\n    x,\n    y\n  };\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\n};\n\nconst positionWithinElement = (x, y, element) => {\n  const {\n    type,\n    x1,\n    x2,\n    y1,\n    y2\n  } = element;\n\n  switch (type) {\n    case \"line\":\n      const on = onLine(x1, y1, x2, y2, x, y);\n      const start = nearPoint(x, y, x1, y1, \"start\");\n      const end = nearPoint(x, y, x2, y2, \"end\");\n      return start || end || on;\n\n    case \"rectangle\":\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\n\n    case \"pencil\":\n      const betweenAnyPoint = element.points.some((point, index) => {\n        const nextPoint = element.points[index + 1];\n        if (!nextPoint) return false;\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\n      });\n      return betweenAnyPoint ? \"inside\" : null;\n\n    case \"text\":\n      return x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n\n    default:\n      throw new Error(`Type not recognised: ${type}`);\n  }\n};\n\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n\nconst getElementAtPosition = (x, y, elements) => {\n  return elements.map(element => ({ ...element,\n    position: positionWithinElement(x, y, element)\n  })).find(element => element.position !== null);\n};\n\nconst adjustElementCoordinates = element => {\n  const {\n    type,\n    x1,\n    y1,\n    x2,\n    y2\n  } = element;\n\n  if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    return {\n      x1: minX,\n      y1: minY,\n      x2: maxX,\n      y2: maxY\n    };\n  } else {\n    if (x1 < x2 || x1 === x2 && y1 < y2) {\n      return {\n        x1,\n        y1,\n        x2,\n        y2\n      };\n    } else {\n      return {\n        x1: x2,\n        y1: y2,\n        x2: x1,\n        y2: y1\n      };\n    }\n  }\n};\n\nconst cursorForPosition = position => {\n  switch (position) {\n    case \"tl\":\n    case \"br\":\n    case \"start\":\n    case \"end\":\n      return \"nwse-resize\";\n\n    case \"tr\":\n    case \"bl\":\n      return \"nesw-resize\";\n\n    default:\n      return \"move\";\n  }\n};\n\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\n  const {\n    x1,\n    y1,\n    x2,\n    y2\n  } = coordinates;\n\n  switch (position) {\n    case \"tl\":\n    case \"start\":\n      return {\n        x1: clientX,\n        y1: clientY,\n        x2,\n        y2\n      };\n\n    case \"tr\":\n      return {\n        x1,\n        y1: clientY,\n        x2: clientX,\n        y2\n      };\n\n    case \"bl\":\n      return {\n        x1: clientX,\n        y1,\n        x2,\n        y2: clientY\n      };\n\n    case \"br\":\n    case \"end\":\n      return {\n        x1,\n        y1,\n        x2: clientX,\n        y2: clientY\n      };\n\n    default:\n      return null;\n    //should not really get here...\n  }\n};\n\nconst useHistory = initialState => {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const [history, setHistory] = useState([initialState]);\n\n  const setState = function (action) {\n    let overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\n\n    if (overwrite) {\n      const historyCopy = [...history];\n      historyCopy[index] = newState;\n      setHistory(historyCopy);\n    } else {\n      const updatedState = [...history].slice(0, index + 1);\n      setHistory([...updatedState, newState]);\n      setIndex(prevState => prevState + 1);\n    }\n  };\n\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\n\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\n\n  return [history[index], setState, undo, redo];\n};\n\n_s(useHistory, \"iEmo9NqplUe5E9Qu5A/1RO54SF0=\");\n\nconst getSvgPathFromStroke = stroke => {\n  if (!stroke.length) return \"\";\n  const d = stroke.reduce((acc, _ref, i, arr) => {\n    let [x0, y0] = _ref;\n    const [x1, y1] = arr[(i + 1) % arr.length];\n    acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n    return acc;\n  }, [\"M\", ...stroke[0], \"Q\"]);\n  d.push(\"Z\");\n  return d.join(\" \");\n};\n\nconst drawElement = (roughCanvas, context, element) => {\n  switch (element.type) {\n    case \"line\":\n    case \"rectangle\":\n      roughCanvas.draw(element.roughElement);\n      break;\n\n    case \"pencil\":\n      const stroke = getSvgPathFromStroke(getStroke(element.points));\n      context.fill(new Path2D(stroke));\n      break;\n\n    case \"text\":\n      context.textBaseline = \"top\";\n      context.font = \"24px sans-serif\";\n      context.fillText(element.text, element.x1, element.y1);\n      break;\n\n    default:\n      throw new Error(`Type not recognised: ${element.type}`);\n  }\n};\n\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\n\nconst App = () => {\n  _s2();\n\n  const [elements, setElements, undo, redo] = useHistory([]);\n  const [action, setAction] = useState(\"none\");\n  const [tool, setTool] = useState(\"text\");\n  const [selectedElement, setSelectedElement] = useState(null);\n  const textAreaRef = useRef();\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const roughCanvas = rough.canvas(canvas);\n    elements.forEach(element => {\n      if (action === \"writing\" && selectedElement.id === element.id) return;\n      drawElement(roughCanvas, context, element);\n    });\n  }, [elements, action, selectedElement]);\n  useEffect(() => {\n    const undoRedoFunction = event => {\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\n        if (event.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", undoRedoFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", undoRedoFunction);\n    };\n  }, [undo, redo]);\n  useEffect(() => {\n    const textArea = textAreaRef.current;\n\n    if (action === \"writing\") {\n      textArea.focus();\n      textArea.value = selectedElement.text;\n    }\n  }, [action, selectedElement]);\n\n  const updateElement = (id, x1, y1, x2, y2, type, options) => {\n    const elementsCopy = [...elements];\n\n    switch (type) {\n      case \"line\":\n      case \"rectangle\":\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\n        break;\n\n      case \"pencil\":\n        elementsCopy[id].points = [...elementsCopy[id].points, {\n          x: x2,\n          y: y2\n        }];\n        break;\n\n      case \"text\":\n        const textWidth = document.getElementById(\"canvas\").getContext(\"2d\").measureText(options.text).width;\n        const textHeight = 24;\n        elementsCopy[id] = { ...createElement(id, x1, y1, x1 + textWidth, y1 + textHeight, type),\n          text: options.text\n        };\n        break;\n\n      default:\n        throw new Error(`Type not recognised: ${type}`);\n    }\n\n    setElements(elementsCopy, true);\n  };\n\n  const handleMouseDown = event => {\n    if (action === \"writing\") return;\n    const {\n      clientX,\n      clientY\n    } = event;\n\n    if (tool === \"selection\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n\n      if (element) {\n        if (element.type === \"pencil\") {\n          const xOffsets = element.points.map(point => clientX - point.x);\n          const yOffsets = element.points.map(point => clientY - point.y);\n          setSelectedElement({ ...element,\n            xOffsets,\n            yOffsets\n          });\n        } else {\n          const offsetX = clientX - element.x1;\n          const offsetY = clientY - element.y1;\n          setSelectedElement({ ...element,\n            offsetX,\n            offsetY\n          });\n        }\n\n        setElements(prevState => prevState);\n\n        if (element.position === \"inside\") {\n          setAction(\"moving\");\n        } else {\n          setAction(\"resizing\");\n        }\n      }\n    } else {\n      const id = elements.length;\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\n      setElements(prevState => [...prevState, element]);\n      setSelectedElement(element);\n      setAction(tool === \"text\" ? \"writing\" : \"drawing\");\n    }\n  };\n\n  const handleMouseMove = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n\n    if (tool === \"selection\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\n    }\n\n    if (action === \"drawing\") {\n      const index = elements.length - 1;\n      const {\n        x1,\n        y1\n      } = elements[index];\n      updateElement(index, x1, y1, clientX, clientY, tool);\n    } else if (action === \"moving\") {\n      if (selectedElement.type === \"pencil\") {\n        const newPoints = selectedElement.points.map((_, index) => ({\n          x: clientX - selectedElement.xOffsets[index],\n          y: clientY - selectedElement.yOffsets[index]\n        }));\n        const elementsCopy = [...elements];\n        elementsCopy[selectedElement.id] = { ...elementsCopy[selectedElement.id],\n          points: newPoints\n        };\n        setElements(elementsCopy, true);\n      } else {\n        const {\n          id,\n          x1,\n          x2,\n          y1,\n          y2,\n          type,\n          offsetX,\n          offsetY\n        } = selectedElement;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const newX1 = clientX - offsetX;\n        const newY1 = clientY - offsetY;\n        const options = type === \"text\" ? {\n          text: selectedElement.text\n        } : {};\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type, options);\n      }\n    } else if (action === \"resizing\") {\n      const {\n        id,\n        type,\n        position,\n        ...coordinates\n      } = selectedElement;\n      const {\n        x1,\n        y1,\n        x2,\n        y2\n      } = resizedCoordinates(clientX, clientY, position, coordinates);\n      updateElement(id, x1, y1, x2, y2, type);\n    }\n  };\n\n  const handleMouseUp = event => {\n    const {\n      clientX,\n      clientY\n    } = event;\n\n    if (selectedElement) {\n      if (selectedElement.type === \"text\" && clientX - selectedElement.offsetX === selectedElement.x1 && clientY - selectedElement.offsetY === selectedElement.y1) {\n        setAction(\"writing\");\n        return;\n      }\n\n      const index = selectedElement.id;\n      const {\n        id,\n        type\n      } = elements[index];\n\n      if ((action === \"drawing\" || action === \"resizing\") && adjustmentRequired(type)) {\n        const {\n          x1,\n          y1,\n          x2,\n          y2\n        } = adjustElementCoordinates(elements[index]);\n        updateElement(id, x1, y1, x2, y2, type);\n      }\n    }\n\n    if (action === \"writing\") return;\n    setAction(\"none\");\n    setSelectedElement(null);\n  };\n\n  const handleBlur = event => {\n    const {\n      id,\n      x1,\n      y1,\n      type\n    } = selectedElement;\n    setAction(\"none\");\n    setSelectedElement(null);\n    updateElement(id, x1, y1, null, null, type, {\n      text: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"selection\",\n        checked: tool === \"selection\",\n        onChange: () => setTool(\"selection\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selection\",\n        children: \"Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"line\",\n        checked: tool === \"line\",\n        onChange: () => setTool(\"line\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"line\",\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"rectangle\",\n        checked: tool === \"rectangle\",\n        onChange: () => setTool(\"rectangle\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rectangle\",\n        children: \"Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"pencil\",\n        checked: tool === \"pencil\",\n        onChange: () => setTool(\"pencil\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pencil\",\n        children: \"Pencil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"text\",\n        checked: tool === \"text\",\n        onChange: () => setTool(\"text\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redo,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), action === \"writing\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textAreaRef,\n      onBlur: handleBlur,\n      style: {\n        position: \"fixed\",\n        top: selectedElement.y1 - 2,\n        left: selectedElement.x1,\n        font: \"24px sans-serif\",\n        margin: 0,\n        padding: 0,\n        border: 0,\n        outline: 0,\n        resize: \"auto\",\n        overflow: \"hidden\",\n        whiteSpace: \"pre\",\n        background: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      width: window.innerWidth,\n      height: window.innerHeight,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: \"Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"O1Ed7EZmmYv4RxnDVO4yuJoulfU=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Play\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Projects/kribble/src/Components/Play.js"],"names":["getStroke","React","useEffect","useLayoutEffect","useRef","useState","rough","Play","color","fontSize","marginLeft","marginTop","marginBottom","marginRight","height","display","width","alignContent","textAlign","generator","createElement","id","x1","y1","x2","y2","type","roughElement","line","rectangle","points","x","y","text","Error","nearPoint","name","Math","abs","onLine","maxDistance","a","b","c","offset","distance","positionWithinElement","element","on","start","end","topLeft","topRight","bottomLeft","bottomRight","inside","betweenAnyPoint","some","point","index","nextPoint","sqrt","pow","getElementAtPosition","elements","map","position","find","adjustElementCoordinates","minX","min","maxX","max","minY","maxY","cursorForPosition","resizedCoordinates","clientX","clientY","coordinates","useHistory","initialState","setIndex","history","setHistory","setState","action","overwrite","newState","historyCopy","updatedState","slice","prevState","undo","redo","length","getSvgPathFromStroke","stroke","d","reduce","acc","i","arr","x0","y0","push","join","drawElement","roughCanvas","context","draw","fill","Path2D","textBaseline","font","fillText","adjustmentRequired","includes","App","setElements","setAction","tool","setTool","selectedElement","setSelectedElement","textAreaRef","canvas","document","getElementById","getContext","clearRect","forEach","undoRedoFunction","event","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","textArea","current","focus","value","updateElement","options","elementsCopy","textWidth","measureText","textHeight","handleMouseDown","xOffsets","yOffsets","offsetX","offsetY","handleMouseMove","target","style","cursor","newPoints","_","newX1","newY1","handleMouseUp","handleBlur","bottom","padding","top","left","margin","border","outline","resize","overflow","whiteSpace","background","window","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["\r\nimport getStroke from \"perfect-freehand\";\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\n// const rough = require(\"rough\")\r\nimport rough from 'rou'\r\nexport default function Play() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className='deeev1'>\r\n                    <h3 className='heading1'><span style={{ color: 'red' }}>K</span><span style={{ color: 'orange' }}>r</span><span style={{ color: 'yellow' }}>i</span><span style={{ color: '\t#00FF00' }}>b</span><span style={{ color: '#00bfff' }}>b</span><span style={{ color: 'blue' }}>l</span><span style={{ color: '#FF1493' }}>e</span><span style={{ color: 'purple' }}>.</span><span style={{ color: 'white', fontSize: '4rem' }}>io</span></h3>\r\n                    <img src='https://clipart.world/wp-content/uploads/2020/08/cartoon-pencil-png-transparent.png' style={{ marginLeft: '0px', marginTop: '0px', marginBottom: '0px', marginRight: '70rem', height: '7rem' }} />\r\n                </div>\r\n                <center><nav class=\"navbar bg-light\" style={{ display: 'block', width: '90rem', height: '4rem', marginTop: '1rem', alignContent: 'normal' }}>\r\n                    <span class=\"navbar-text\">\r\n                        <h3 style={{ textAlign: 'left', display: 'flex' }}><div style={{ marginTop: '7px' }}>ROUND</div><div style={{ marginLeft: '30px' }} > TIME <img className=\"image2baby\" src='https://upload.wikimedia.org/wikipedia/commons/7/7a/Alarm_Clock_GIF_Animation_High_Res.gif' /></div><div style={{ marginLeft: '50rem', marginTop: '7px' }}>Number of Letters:</div></h3>\r\n\r\n                    </span>\r\n                </nav>\r\n                </center>\r\n                <nav class=\"navbar bg-light\" style={{ display: 'inline-block', width: '16rem', height: '25rem', marginTop: '0.6rem', marginLeft: '2.5rem', marginBottom: '20rem' }}>\r\n                    <span class=\"navbar-text\">\r\n\r\n                    </span>\r\n                </nav>\r\n                <nav class=\"navbar bg-light\" style={{ display: 'inline-block', width: '55rem', height: '45rem', marginTop: '0.6rem', marginLeft: '0.6rem' }}>\r\n                    <span class=\"navbar-text\">\r\n\r\n                    </span>\r\n                </nav>\r\n                <img className='mg' src='https://www.newsshuttle.com/wp-content/uploads/2020/06/HS2.jpg'/>\r\n                <nav calssName='overlay' class=\"navbar bg-light\" style={{ display: 'inline-block', width: '17.8rem', height: '30rem', marginTop: '0.6rem', marginLeft: '0.6rem' }}>\r\n                    <span class=\"navbar-text\">\r\n\r\n                    </span>\r\n                </nav>\r\n                \r\n            </div>\r\n            <input className='inpbaby' type='text' placeholder='Guess here...' />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst generator = rough.generator();\r\n\r\nconst createElement = (id, x1, y1, x2, y2, type) => {\r\n  switch (type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      const roughElement =\r\n        type === \"line\"\r\n          ? generator.line(x1, y1, x2, y2)\r\n          : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\r\n      return { id, x1, y1, x2, y2, type, roughElement };\r\n    case \"pencil\":\r\n      return { id, type, points: [{ x: x1, y: y1 }] };\r\n    case \"text\":\r\n      return { id, type, x1, y1, x2, y2, text: \"\" };\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst nearPoint = (x, y, x1, y1, name) => {\r\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\r\n};\r\n\r\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\r\n  const a = { x: x1, y: y1 };\r\n  const b = { x: x2, y: y2 };\r\n  const c = { x, y };\r\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\r\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\r\n};\r\n\r\nconst positionWithinElement = (x, y, element) => {\r\n  const { type, x1, x2, y1, y2 } = element;\r\n  switch (type) {\r\n    case \"line\":\r\n      const on = onLine(x1, y1, x2, y2, x, y);\r\n      const start = nearPoint(x, y, x1, y1, \"start\");\r\n      const end = nearPoint(x, y, x2, y2, \"end\");\r\n      return start || end || on;\r\n    case \"rectangle\":\r\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\r\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\r\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\r\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\r\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\r\n    case \"pencil\":\r\n      const betweenAnyPoint = element.points.some((point, index) => {\r\n        const nextPoint = element.points[index + 1];\r\n        if (!nextPoint) return false;\r\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\r\n      });\r\n      return betweenAnyPoint ? \"inside\" : null;\r\n    case \"text\":\r\n      return x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\r\n    default:\r\n      throw new Error(`Type not recognised: ${type}`);\r\n  }\r\n};\r\n\r\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n\r\nconst getElementAtPosition = (x, y, elements) => {\r\n  return elements\r\n    .map(element => ({ ...element, position: positionWithinElement(x, y, element) }))\r\n    .find(element => element.position !== null);\r\n};\r\n\r\nconst adjustElementCoordinates = element => {\r\n  const { type, x1, y1, x2, y2 } = element;\r\n  if (type === \"rectangle\") {\r\n    const minX = Math.min(x1, x2);\r\n    const maxX = Math.max(x1, x2);\r\n    const minY = Math.min(y1, y2);\r\n    const maxY = Math.max(y1, y2);\r\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\r\n  } else {\r\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\r\n      return { x1, y1, x2, y2 };\r\n    } else {\r\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\r\n    }\r\n  }\r\n};\r\n\r\nconst cursorForPosition = position => {\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"br\":\r\n    case \"start\":\r\n    case \"end\":\r\n      return \"nwse-resize\";\r\n    case \"tr\":\r\n    case \"bl\":\r\n      return \"nesw-resize\";\r\n    default:\r\n      return \"move\";\r\n  }\r\n};\r\n\r\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\r\n  const { x1, y1, x2, y2 } = coordinates;\r\n  switch (position) {\r\n    case \"tl\":\r\n    case \"start\":\r\n      return { x1: clientX, y1: clientY, x2, y2 };\r\n    case \"tr\":\r\n      return { x1, y1: clientY, x2: clientX, y2 };\r\n    case \"bl\":\r\n      return { x1: clientX, y1, x2, y2: clientY };\r\n    case \"br\":\r\n    case \"end\":\r\n      return { x1, y1, x2: clientX, y2: clientY };\r\n    default:\r\n      return null; //should not really get here...\r\n  }\r\n};\r\n\r\nconst useHistory = initialState => {\r\n  const [index, setIndex] = useState(0);\r\n  const [history, setHistory] = useState([initialState]);\r\n\r\n  const setState = (action, overwrite = false) => {\r\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\r\n    if (overwrite) {\r\n      const historyCopy = [...history];\r\n      historyCopy[index] = newState;\r\n      setHistory(historyCopy);\r\n    } else {\r\n      const updatedState = [...history].slice(0, index + 1);\r\n      setHistory([...updatedState, newState]);\r\n      setIndex(prevState => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\r\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\r\n\r\n  return [history[index], setState, undo, redo];\r\n};\r\n\r\nconst getSvgPathFromStroke = stroke => {\r\n  if (!stroke.length) return \"\";\r\n\r\n  const d = stroke.reduce(\r\n    (acc, [x0, y0], i, arr) => {\r\n      const [x1, y1] = arr[(i + 1) % arr.length];\r\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\r\n      return acc;\r\n    },\r\n    [\"M\", ...stroke[0], \"Q\"]\r\n  );\r\n\r\n  d.push(\"Z\");\r\n  return d.join(\" \");\r\n};\r\n\r\nconst drawElement = (roughCanvas, context, element) => {\r\n  switch (element.type) {\r\n    case \"line\":\r\n    case \"rectangle\":\r\n      roughCanvas.draw(element.roughElement);\r\n      break;\r\n    case \"pencil\":\r\n      const stroke = getSvgPathFromStroke(getStroke(element.points));\r\n      context.fill(new Path2D(stroke));\r\n      break;\r\n    case \"text\":\r\n      context.textBaseline = \"top\";\r\n      context.font = \"24px sans-serif\";\r\n      context.fillText(element.text, element.x1, element.y1);\r\n      break;\r\n    default:\r\n      throw new Error(`Type not recognised: ${element.type}`);\r\n  }\r\n};\r\n\r\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\r\n\r\nconst App = () => {\r\n  const [elements, setElements, undo, redo] = useHistory([]);\r\n  const [action, setAction] = useState(\"none\");\r\n  const [tool, setTool] = useState(\"text\");\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const textAreaRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const roughCanvas = rough.canvas(canvas);\r\n\r\n    elements.forEach(element => {\r\n      if (action === \"writing\" && selectedElement.id === element.id) return;\r\n      drawElement(roughCanvas, context, element);\r\n    });\r\n  }, [elements, action, selectedElement]);\r\n\r\n  useEffect(() => {\r\n    const undoRedoFunction = event => {\r\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\r\n        if (event.shiftKey) {\r\n          redo();\r\n        } else {\r\n          undo();\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", undoRedoFunction);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", undoRedoFunction);\r\n    };\r\n  }, [undo, redo]);\r\n\r\n  useEffect(() => {\r\n    const textArea = textAreaRef.current;\r\n    if (action === \"writing\") {\r\n      textArea.focus();\r\n      textArea.value = selectedElement.text;\r\n    }\r\n  }, [action, selectedElement]);\r\n\r\n  const updateElement = (id, x1, y1, x2, y2, type, options) => {\r\n    const elementsCopy = [...elements];\r\n\r\n    switch (type) {\r\n      case \"line\":\r\n      case \"rectangle\":\r\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\r\n        break;\r\n      case \"pencil\":\r\n        elementsCopy[id].points = [...elementsCopy[id].points, { x: x2, y: y2 }];\r\n        break;\r\n      case \"text\":\r\n        const textWidth = document\r\n          .getElementById(\"canvas\")\r\n          .getContext(\"2d\")\r\n          .measureText(options.text).width;\r\n        const textHeight = 24;\r\n        elementsCopy[id] = {\r\n          ...createElement(id, x1, y1, x1 + textWidth, y1 + textHeight, type),\r\n          text: options.text,\r\n        };\r\n        break;\r\n      default:\r\n        throw new Error(`Type not recognised: ${type}`);\r\n    }\r\n\r\n    setElements(elementsCopy, true);\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    if (action === \"writing\") return;\r\n\r\n    const { clientX, clientY } = event;\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      if (element) {\r\n        if (element.type === \"pencil\") {\r\n          const xOffsets = element.points.map(point => clientX - point.x);\r\n          const yOffsets = element.points.map(point => clientY - point.y);\r\n          setSelectedElement({ ...element, xOffsets, yOffsets });\r\n        } else {\r\n          const offsetX = clientX - element.x1;\r\n          const offsetY = clientY - element.y1;\r\n          setSelectedElement({ ...element, offsetX, offsetY });\r\n        }\r\n        setElements(prevState => prevState);\r\n\r\n        if (element.position === \"inside\") {\r\n          setAction(\"moving\");\r\n        } else {\r\n          setAction(\"resizing\");\r\n        }\r\n      }\r\n    } else {\r\n      const id = elements.length;\r\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\r\n      setElements(prevState => [...prevState, element]);\r\n      setSelectedElement(element);\r\n\r\n      setAction(tool === \"text\" ? \"writing\" : \"drawing\");\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = event => {\r\n    const { clientX, clientY } = event;\r\n\r\n    if (tool === \"selection\") {\r\n      const element = getElementAtPosition(clientX, clientY, elements);\r\n      event.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\r\n    }\r\n\r\n    if (action === \"drawing\") {\r\n      const index = elements.length - 1;\r\n      const { x1, y1 } = elements[index];\r\n      updateElement(index, x1, y1, clientX, clientY, tool);\r\n    } else if (action === \"moving\") {\r\n      if (selectedElement.type === \"pencil\") {\r\n        const newPoints = selectedElement.points.map((_, index) => ({\r\n          x: clientX - selectedElement.xOffsets[index],\r\n          y: clientY - selectedElement.yOffsets[index],\r\n        }));\r\n        const elementsCopy = [...elements];\r\n        elementsCopy[selectedElement.id] = {\r\n          ...elementsCopy[selectedElement.id],\r\n          points: newPoints,\r\n        };\r\n        setElements(elementsCopy, true);\r\n      } else {\r\n        const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\r\n        const width = x2 - x1;\r\n        const height = y2 - y1;\r\n        const newX1 = clientX - offsetX;\r\n        const newY1 = clientY - offsetY;\r\n        const options = type === \"text\" ? { text: selectedElement.text } : {};\r\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type, options);\r\n      }\r\n    } else if (action === \"resizing\") {\r\n      const { id, type, position, ...coordinates } = selectedElement;\r\n      const { x1, y1, x2, y2 } = resizedCoordinates(clientX, clientY, position, coordinates);\r\n      updateElement(id, x1, y1, x2, y2, type);\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = event => {\r\n    const { clientX, clientY } = event;\r\n    if (selectedElement) {\r\n      if (\r\n        selectedElement.type === \"text\" &&\r\n        clientX - selectedElement.offsetX === selectedElement.x1 &&\r\n        clientY - selectedElement.offsetY === selectedElement.y1\r\n      ) {\r\n        setAction(\"writing\");\r\n        return;\r\n      }\r\n\r\n      const index = selectedElement.id;\r\n      const { id, type } = elements[index];\r\n      if ((action === \"drawing\" || action === \"resizing\") && adjustmentRequired(type)) {\r\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\r\n        updateElement(id, x1, y1, x2, y2, type);\r\n      }\r\n    }\r\n\r\n    if (action === \"writing\") return;\r\n\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n  };\r\n\r\n  const handleBlur = event => {\r\n    const { id, x1, y1, type } = selectedElement;\r\n    setAction(\"none\");\r\n    setSelectedElement(null);\r\n    updateElement(id, x1, y1, null, null, type, { text: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"fixed\" }}>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"selection\"\r\n          checked={tool === \"selection\"}\r\n          onChange={() => setTool(\"selection\")}\r\n        />\r\n        <label htmlFor=\"selection\">Selection</label>\r\n        <input type=\"radio\" id=\"line\" checked={tool === \"line\"} onChange={() => setTool(\"line\")} />\r\n        <label htmlFor=\"line\">Line</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"rectangle\"\r\n          checked={tool === \"rectangle\"}\r\n          onChange={() => setTool(\"rectangle\")}\r\n        />\r\n        <label htmlFor=\"rectangle\">Rectangle</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"pencil\"\r\n          checked={tool === \"pencil\"}\r\n          onChange={() => setTool(\"pencil\")}\r\n        />\r\n        <label htmlFor=\"pencil\">Pencil</label>\r\n        <input type=\"radio\" id=\"text\" checked={tool === \"text\"} onChange={() => setTool(\"text\")} />\r\n        <label htmlFor=\"text\">Text</label>\r\n      </div>\r\n      <div style={{ position: \"fixed\", bottom: 0, padding: 10 }}>\r\n        <button onClick={undo}>Undo</button>\r\n        <button onClick={redo}>Redo</button>\r\n      </div>\r\n      {action === \"writing\" ? (\r\n        <textarea\r\n          ref={textAreaRef}\r\n          onBlur={handleBlur}\r\n          style={{\r\n            position: \"fixed\",\r\n            top: selectedElement.y1 - 2,\r\n            left: selectedElement.x1,\r\n            font: \"24px sans-serif\",\r\n            margin: 0,\r\n            padding: 0,\r\n            border: 0,\r\n            outline: 0,\r\n            resize: \"auto\",\r\n            overflow: \"hidden\",\r\n            whiteSpace: \"pre\",\r\n            background: \"transparent\",\r\n          }}\r\n        />\r\n      ) : null}\r\n      <canvas\r\n        id=\"canvas\"\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n      >\r\n        Canvas\r\n      </canvas>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}