{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\kribble\\\\src\\\\Can.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:4000', {\n  transports: ['websocket', 'polling', 'flashsocket']\n});\nconst colors = [\"red\", \"green\", \"yellow\", \"black\", \"blue\", \"orange\", \"tomato\", \"lightgreen\", \"skyblue\", \"brown\", \"pink\", \"white\"];\n\nfunction Can() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [lastPosition, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (canvasRef.current) {\n      ctx.current = canvasRef.current.getContext('2d');\n    }\n  }, []);\n  const draw = useCallback((x, y) => {\n    if (mouseDown) {\n      ctx.current.beginPath();\n      ctx.current.strokeStyle = selectedColor;\n      ctx.current.lineWidth = 10;\n      ctx.current.lineJoin = 'round';\n      ctx.current.moveTo(lastPosition.x, lastPosition.y);\n      ctx.current.lineTo(x, y);\n      ctx.current.closePath();\n      ctx.current.stroke();\n      setPosition({\n        x,\n        y\n      });\n    }\n  }, [lastPosition, mouseDown, selectedColor, setPosition]);\n\n  const download = async () => {\n    const image = canvasRef.current.toDataURL('image/png');\n    const blob = await (await fetch(image)).blob();\n    const blobURL = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = blobURL;\n    link.download = \"image.png\";\n    link.click();\n  };\n\n  const clear = () => {\n    ctx.current.clearRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height);\n  };\n\n  const onMouseDown = e => {\n    setPosition({\n      x: e.pageX - 305,\n      y: e.pageY - 225\n    });\n    setMouseDown(true);\n  };\n\n  const onMouseUp = e => {\n    setMouseDown(false);\n  };\n\n  const onMouseMove = e => {\n    draw(e.pageX - 305, e.pageY - 225);\n  }; // console.log(lastPosition, setPosition)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Addo\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          style: {\n            border: \"8px solid #000\",\n            display: 'inline-block',\n            background: 'white'\n          },\n          width: 900,\n          height: 650,\n          ref: canvasRef,\n          onMouseDown: onMouseDown,\n          onMouseUp: onMouseUp,\n          onMouseLeave: onMouseUp,\n          onMouseMove: onMouseMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            fontSize: '2rem',\n            fontFamily: 'cursive'\n          },\n          value: selectedColor,\n          onChange: e => setSelectedColor(e.target.value),\n          children: colors.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: color,\n            children: color\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 26\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: '2rem',\n            fontFamily: 'cursive'\n          },\n          onClick: clear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: '2rem',\n            fontFamily: 'cursive'\n          },\n          onClick: download,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Can, \"3Gfbksu6y3r4k6xAChQxUTjjNIY=\");\n\n_c = Can;\nexport default Can;\n\nvar _c;\n\n$RefreshReg$(_c, \"Can\");","map":{"version":3,"sources":["C:/Projects/kribble/src/Can.js"],"names":["React","useCallback","useEffect","useRef","useState","socket","io","connect","transports","colors","Can","canvasRef","ctx","selectedColor","setSelectedColor","mouseDown","setMouseDown","lastPosition","setPosition","x","y","current","getContext","draw","beginPath","strokeStyle","lineWidth","lineJoin","moveTo","lineTo","closePath","stroke","download","image","toDataURL","blob","fetch","blobURL","URL","createObjectURL","link","document","createElement","href","click","clear","clearRect","canvas","width","height","onMouseDown","e","pageX","pageY","onMouseUp","onMouseMove","border","display","background","fontSize","fontFamily","target","value","map","color"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\n\n\nconst socket = io.connect('http://localhost:4000', { transports: ['websocket', 'polling', 'flashsocket'] })\n\nconst colors = [\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"black\",\n  \"blue\",\n  \"orange\",\n  \"tomato\",\n  \"lightgreen\",\n  \"skyblue\",\n  \"brown\",\n  \"pink\",\n  \"white\"\n]\n\nfunction Can() {\n  const canvasRef = useRef(null);\n  const ctx = useRef(null);\n\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [lastPosition, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      ctx.current = canvasRef.current.getContext('2d');\n    }\n  }, []);\n\n  const draw = useCallback((x, y) => {\n    if (mouseDown) {\n      ctx.current.beginPath();\n      ctx.current.strokeStyle = selectedColor;\n      ctx.current.lineWidth = 10;\n      ctx.current.lineJoin = 'round';\n      ctx.current.moveTo(lastPosition.x, lastPosition.y);\n      ctx.current.lineTo(x, y);\n      ctx.current.closePath();\n      ctx.current.stroke();\n\n      setPosition({\n        x,\n        y\n      })\n    }\n  }, [lastPosition, mouseDown, selectedColor, setPosition])\n\n  const download = async () => {\n    const image = canvasRef.current.toDataURL('image/png');\n    const blob = await (await fetch(image)).blob();\n    const blobURL = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = blobURL;\n    link.download = \"image.png\";\n    link.click();\n  }\n\n  const clear = () => {\n    ctx.current.clearRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height)\n  }\n\n  const onMouseDown = (e) => {\n    setPosition({\n      x: e.pageX-305,\n      y: e.pageY-225\n    })\n    setMouseDown(true)\n  }\n\n  const onMouseUp = (e) => {\n    setMouseDown(false)\n  }\n\n  const onMouseMove = (e) => {\n    draw(e.pageX-305, e.pageY-225)\n  }\n  // console.log(lastPosition, setPosition)\n  return (\n    <>\n      <div className=\"Addo\">\n        <center>\n          <canvas\n            style={{\n              border: \"8px solid #000\", display: 'inline-block', background: 'white'\n            }}\n            width={900}\n            height={650}\n            ref={canvasRef}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n            onMouseLeave={onMouseUp}\n            onMouseMove={onMouseMove}\n          />\n        </center>\n        <br />\n        <center>\n          <select style={{ fontSize: '2rem', fontFamily: 'cursive' }}\n            value={selectedColor}\n            onChange={(e) => setSelectedColor(e.target.value)}\n          >\n            {\n              colors.map(\n                color => <option key={color} value={color}>{color}</option>\n              )\n            }\n          </select>\n          <button style={{ fontSize: '2rem', fontFamily: 'cursive' }} onClick={clear}>Clear</button>\n          <button style={{ fontSize: '2rem', fontFamily: 'cursive' }} onClick={download}>Download</button>\n        </center>\n      </div>\n    </>\n  );\n}\n\nexport default Can;"]},"metadata":{},"sourceType":"module"}